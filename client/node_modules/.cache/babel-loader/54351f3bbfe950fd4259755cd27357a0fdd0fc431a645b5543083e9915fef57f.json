{"ast":null,"code":"export const quantityChange = async (cartItems, setCartItems, productId, action) => {\n  try {\n    const token = localStorage.getItem('token');\n    const updatedCartItems = cartItems.map(item => {\n      if (item.id === productId) {\n        if (action === 'increase') {\n          item.count++;\n        } else if (action === 'decrease' && item.count > 0) {\n          item.count--;\n        }\n      }\n      return item;\n    }).filter(item => item.count > 0);\n    setCartItems(updatedCartItems);\n    await fetch('/cart-edit', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        productId,\n        action\n      })\n    });\n  } catch (error) {\n    console.error('Error updating cart items:', error);\n  }\n};","map":{"version":3,"names":["quantityChange","cartItems","setCartItems","productId","action","token","localStorage","getItem","updatedCartItems","map","item","id","count","filter","fetch","method","headers","body","JSON","stringify","error","console"],"sources":["C:/jewelry_shop (2)/jewelry_shop/client/src/components/js/quantityChange.js"],"sourcesContent":["export const quantityChange = async (cartItems, setCartItems, productId, action) => {\r\n    try {\r\n        const token = localStorage.getItem('token');\r\n        const updatedCartItems = cartItems.map(item => {\r\n            if (item.id === productId) {\r\n                if (action === 'increase') {\r\n                    item.count++;\r\n                } else if (action === 'decrease' && item.count > 0) {\r\n                    item.count--;\r\n                }\r\n            }\r\n            return item;\r\n        }).filter(item => item.count > 0);\r\n\r\n        setCartItems(updatedCartItems);\r\n\r\n        await fetch('/cart-edit', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({ productId, action })\r\n        });\r\n    } catch (error) {\r\n        console.error('Error updating cart items:', error);\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,MAAAA,CAAOC,SAAS,EAAEC,YAAY,EAAEC,SAAS,EAAEC,MAAM,KAAK;EAChF,IAAI;IACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,gBAAgB,GAAGP,SAAS,CAACQ,GAAG,CAACC,IAAI,IAAI;MAC3C,IAAIA,IAAI,CAACC,EAAE,KAAKR,SAAS,EAAE;QACvB,IAAIC,MAAM,KAAK,UAAU,EAAE;UACvBM,IAAI,CAACE,KAAK,EAAE;QAChB,CAAC,MAAM,IAAIR,MAAM,KAAK,UAAU,IAAIM,IAAI,CAACE,KAAK,GAAG,CAAC,EAAE;UAChDF,IAAI,CAACE,KAAK,EAAE;QAChB;MACJ;MACA,OAAOF,IAAI;IACf,CAAC,CAAC,CAACG,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACE,KAAK,GAAG,CAAC,CAAC;IAEjCV,YAAY,CAACM,gBAAgB,CAAC;IAE9B,MAAMM,KAAK,CAAC,YAAY,EAAE;MACtBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASX,KAAM;MACrC,CAAC;MACDY,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEhB,SAAS;QAAEC;MAAO,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,CAAC,OAAOgB,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;EACtD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}